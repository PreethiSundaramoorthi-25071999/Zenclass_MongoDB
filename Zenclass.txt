Design database for Zen class programme

USERS :-

db.users.insertMany([
  {username: "Preethi Sundar", email: "preethi@gmail.com", role: "student", batch: "Computer", startDate: new Date("2020-08-25")},
  {username: "Anushka Shetty", email: "anushka@gmail.com", role: "student", batch: "Biology", startDate: new Date("2020-10-16")},
  {username: "Rajinikanth Shivaji", email: "rajini@gmail.com", role: "student", batch: "Film Making", startDate: new Date("2020-11-04")}
])

[
    {
        _id: ObjectId('66fd7cc3afd0816259c73bf8''),
        username: 'Preethi Sundar',
        email: 'preethi@gmail.com',
        role: 'student',
        batch: 'Computer',
        startDate: ISODate('2020-08-25T00:00:00.000Z')
    },
    {
        _id: ObjectId('66fd7cc3afd0816259c73bf9'),
        username: 'Anushka Shetty',
        email: 'anushka@gmail.com',
        role: 'student',
        batch: 'Computer',
        startDate: ISODate('2020-10-16T00:00:00.000Z')
    },
    {
        _id: ObjectId('66fd7cc3afd0816259c73bfa'),
        username: 'Rajinikanth Shivaji',
        email: 'rajini@gmail.com',
        role: 'student',
        batch: 'Film Making',
        startDate: ISODate('2020-11-04T00:00:00.000Z')
    }
]


CODEKATA :-

db.codekata.insertMany([
    {user_id: "101", no_of_problems_solved : 25}, 
    {user_id: "102", no_of_problems_solved : 50}, 
    {user_id: "103", no_of_problems_solved : 75}
])

[
    {
        _id: ObjectId('66fd7cf3afd0816259c73bfb''),
        user_id: '101',
        no_of_problems_solved: 25
    },
    {
        _id: ObjectId('66fd7cf3afd0816259c73bfc''),
        user_id: '102',
        problems_solved: 50
    },
    {
        _id: ObjectId('66fd7cf3afd0816259c73bfd'),
        user_id: '103',
        problems_solved: 75
    }
]


ATTENDANCE :-

db.attendance.insertMany([
    {user_id: "101", Attendance_Date: new Date("2024-07-25"), status: "Present"}, 
    {user_id: "102", Attendance_Date: new Date("2024-06-04"), status: "Absent"},
    {user_id: "103", Attendance_Date: new Date("2024-10-16"), status: "Absent"}
])

[
    {
        _id: ObjectId('66fd7d36afd0816259c73c04'),
        user_id: '101',
        Attendance_Date: ISODate('2024-07-25T00:00:00.000Z'),
        status: 'Present'
    },
    {
        _id: ObjectId('66fd7d36afd0816259c73c05'),
        user_id: '102',
        Attendance_Date: ISODate('2024-06-04T00:00:00.000Z'),
        status: 'Absent'
    },
    {
        _id: ObjectId('66fd7d36afd0816259c73c06'),
        user_id: '103',
        Attendance_Date: ISODate('2024-10-16T00:00:00.000Z'),
        status: 'Absent'
    }
]

---------
TOPICS :- 

db.topics.insertMany([
    {user_id: "101", title: "Python", Date: new Date("2024-07-25")},
    {user_id: "102", title: "HTML", Date: new Date("2024-06-04")},
    {user_id: "103", title: "Java", Date: new Date("2024-10-16")}
])

[
    {
        _id: ObjectId('66fd7d76afd0816259c73c07'),
        user_id: '101',
        title: 'Python',
        Date: ISODate('2024-07-25T00:00:00.000Z')
    },
    {
        _id: ObjectId('66fd7d76afd0816259c73c08'),
        user_id: '102',
        title: 'HTML',
        Date: ISODate('2024-06-04T00:00:00.000Z')
    },
    {
        _id: ObjectId('66fd7d76afd0816259c73c09'),
        user_id: '103',
        title: 'Java',
        Date: ISODate('2024-10-16T00:00:00.000Z')
    }
]


TASKS :- 

db.tasks.insertMany([
    {topics_id: "T1", user_id: "101", title: "Python", submission_date: new Date("2024-08-07"), submitted: true},
    {topics_id: "T2", user_id: "102", title: "HTML", submission_date: new Date("2024-07-07"), submitted: false},
    {topics_id: "T3", user_id: "103", title: "Java", submission_date: new Date("2024-06-16"), submitted: true}
])

[
    {
        _id: ObjectId('66fd7da3afd0816259c73c0a''),
        topics_id: 'T1',
        user_id: '101',
        title: 'Python',
        submission_date: ISODate('2024-08-07T00:00:00.000Z'),
        submitted: true
    },
    {
        _id: ObjectId('66fd7da3afd0816259c73c0b'),
        topics_id: 'T2',
        user_id: '102',
        title: 'HTML',
        submission_date: ISODate('2024-07-07T00:00:00.000Z'),
        submitted: false
    },
    {
        _id: ObjectId('66fd7da3afd0816259c73c0c'),
        topics_id: 'T3',
        user_id: '103',
        title: 'Java',
        submission_date: ISODate('2024-06-16T00:00:00.000Z'),
        submitted: true
    }
]


COMPANY DRIVES :-

db.companyDrives.insertMany([
    {company_name: "TCS", Date: new Date("2020-10-18"), students: [ ObjectId('66f3faa261a786e26fc73c01'),  ObjectId('66f3faa261a786e26fc73c02')]}, 
    {company_name: "CTS", Date: new Date("2020-11-28"), students: [ObjectId('66f3faa261a786e26fc73c01'), ObjectId('66f3faa261a786e26fc73c02')]}, 
    {company_name: "HCL", Date: new Date("2020-11-12"), students: [ObjectId('66f3faa261a786e26fc73c03'), ObjectId('66f3faa261a786e26fc73c01')]}
])

[
    {
        _id: ObjectId('66fd7dccafd0816259c73c0d'),
        company_name: 'TCS',
        Date: ISODate('2020-10-18T00:00:00.000Z'),
        students: [
            ObjectId('66f3faa261a786e26fc73c01'),
            ObjectId('66f3faa261a786e26fc73c02')
        ]
    },
    {
        _id: ObjectId('66fd7dccafd0816259c73c0e'),
        company_name: 'CTS',
        Date: ISODate('2020-11-28T00:00:00.000Z'),
        students: [
            ObjectId('66f3faa261a786e26fc73c01'),
            ObjectId('66f3faa261a786e26fc73c02')
        ]
    },
    {
        _id: ObjectId('66fd7dccafd0816259c73c0f'),
        company_name: 'HCL',
        Date: ISODate('2020-11-12T00:00:00.000Z'),
        students: [
            ObjectId('66f3faa261a786e26fc73c03'),
            ObjectId('66f3faa261a786e26fc73c01')
        ]
    }
]


MENTORS :- 

db.mentors.insertMany([
    {name: "Preethi", specialization: "Developer", mentee_count: 33}, 
    {name: "Rishaan", specialization: "Analyst", mentee_count: 10}, 
    {name: "Rajini", specialization: "Receptionist", mentee_count: 25}
])

[
    {
        _id: ObjectId('66fd7e01afd0816259c73c10'),
        name: 'Preethi',
        specialization: 'Developer',
        mentee_count: 33
    },
    {
        _id: ObjectId('66fd7e01afd0816259c73c11'),
        name: 'Rishaan',
        specialization: 'Analyst',
        mentee_count: 10
    },
    {
        _id: ObjectId('66fd7e01afd0816259c73c12'),
        name: 'Rajini',
        specialization: 'Receptionist',
        mentee_count: 25
    }
]



1) Find all the topics and tasks which are thought in the month of October

db.topics.find( { Date: { $gte: new Date("2020-10-01"), $lt: new Date("2020-11-01")} } )

db.tasks.find( { submission_date: { $gte: new Date("2020-10-01"), $lt: new Date("2020-11-01")} } )


2) Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.companyDrives.find({Date: {$gt: new Date("2020-10-15"), $lt: new Date("2020-10-31")}})


3) Find all the company drives and students who are appeared for the placement.

const drives = db.companyDrives.find().toArray();

const studentsIds = drives.map(drive => drive.students);

const studentsInfo = db.users.find({_id: { $in: studentsIds }}).toArray();

const drivesWithStudents = drives.map(drive => {
    return {
        ...drive,
        students_info: studentsInfo.filter(students => drive.students.includes(students._id))
    };
});



4) Find the number of problems solved by the user in codekata

db.codekata.aggregate([{ $group: { _id: "$user_id", total_solved: { $sum: "$problems_solved" } } }]);


5) Find all the mentors with who has the mentee's count more than 15

db.mentors.find({mentee_count: {$gt: 15}})


6) Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

const absentUsers = db.attendance.find({status: "absent", classDate: {$gt: new Date("2020-10-15"), $lt: new Date("2020-10-31")}}).map(a => a.user_id)

const notSubmittedTasks = db.tasks.find({submission_date: { $gte: new Date("2020-10-15"), $lte: new Date("2020-10-31") }, submitted: false}).map(t => t.topics_id);

const absentAndNotSubmitted = db.users.find({_id: { $in: absentUsers }, "tasks.topics_id": { $in: notSubmittedTasks }}).count();